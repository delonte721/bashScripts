#!/bin/bash
#checkstatus  
#This script will show you the HTTP status code and the last destination of the redirect. With trace it will show/tell you the number of redirects it took to get to the last destination.The name and IP of the redirection server. It will also show if it is HTTP/S to HTTP/S redirection
#Use the script in terminal checkstatus <domain> / checkstatus <domain> trace

URL=$1
curl=`curl -I $URL 2>/dev/null | head -n 1`
redirect=`curl -I -Ls -o /dev/null -w %{url_effective} $URL`
location=`curl -I $redirect 2>/dev/null | head -n 1`
chain=`curl --head --silent --location --output /dev/null --write-out "It took %{num_redirects} redirect/redirects to get %{url_effective}\n" $URL`
origin=`curl -I $URL 2>/dev/null | head -n 7 | grep -E Server`
origin2=`curl -I $URL 2>/dev/null | head -n 9 | grep -E Server | sed 's/\s\+/\n/g'` 
IP=`host $URL | awk '{print $4}' | sed -e 's/handled//g' | sed -e 's/address//g'`



#grabbing the 301/302 redirect to know which curl to run if 301/302 run $location if its not run $curl 
   if  [[ `echo $curl | grep -E 301\|302` ]]; 
   then 
      echo $location
   else 
      echo $curl
   fi
#the while loop follows the redirect/ show all of the redirects
    while [ -n "${URL}" ]
do
    echo $URL
    URL=$(curl -sw "\n\n%{redirect_url}" "${URL}" | tail -n 1)
done

#when you add the string trace it will show you the write out of how many redirects it took to get to the final destination, name of the redirection server, and its IP(s)
#if Name of server does not show 
if [[ $2 == *"trace"* ]]; 
   then
      echo $chain 
      echo $origin 
      echo "$IP"
   if [[ -z "$origin" ]];
   then
      echo $origin2
   fi
fi

if [ -f $1 ]; then
	for x in `grep -v ^# $1 | awk '{print $1}'`; do
		echo "redirect/s for $x"
		redirect_url=`curl -I -Ls -o /dev/null -w %{url_effective} $x | while curl -sw "\n\n%{redirect_url}" $x tail -n 1 |curl --head --silent --location --output /dev/null --write-out "It took %{num_redirects} redirect/redirects to get %{url_effective}\n" $x | grep $x | sort | uniq`
		if [[ $redirect_url ]]; then
			echo "$redirect_url"
			echo ""
		else
			echo "None"
			echo ""
	fi
	done
fi

if [ $# -lt 1 ]; then
	echo ""
	echo "This script will show you the HTTP status code and the last destination of the redirect. With trace it will show/tell you the number of redirects it took to get to the last destination.The name and IP of the redirection server. It will also show if it is HTTP/S to HTTP/S redirection"
	echo "--- Incorrect Syntax ----"
	echo "Usage: checkstatus <domain> / checkstatus <domain> trace"
	echo "Example: checkstatus constellix.com"
	echo "Example: checkstatus constellix.com trace" 
	echo ""
	exit
fi